/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.somi92.drjson.gui;

import com.github.somi92.drjson.domain.Routine;
import com.github.somi92.drjson.domain.RoutineStep;
import com.github.somi92.drjson.engine.RoutinesManager;
import com.github.somi92.drjson.tables.RoutineStepsTableModel;
import com.github.somi92.drjson.tables.RoutinesTableModel;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author milos
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        setupTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jpnlRoutines = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblRoutines = new javax.swing.JTable();
        jbtnAddRoutine = new javax.swing.JButton();
        jbtnEditRoutine = new javax.swing.JButton();
        jbtnDeleteRoutine = new javax.swing.JButton();
        jlblFile = new javax.swing.JLabel();
        jbtnLoad = new javax.swing.JButton();
        jpnlSteps = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblRoutineSteps = new javax.swing.JTable();
        jbtnAddStep = new javax.swing.JButton();
        jbtnEditStep = new javax.swing.JButton();
        jbtnDeleteStep = new javax.swing.JButton();
        jbtnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menadzer rutina");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jpnlRoutines.setBorder(javax.swing.BorderFactory.createTitledBorder("Rutine"));

        jtblRoutines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblRoutines);

        jbtnAddRoutine.setText("Dodaj rutinu");
        jbtnAddRoutine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddRoutineActionPerformed(evt);
            }
        });

        jbtnEditRoutine.setText("Izmeni rutinu");
        jbtnEditRoutine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditRoutineActionPerformed(evt);
            }
        });

        jbtnDeleteRoutine.setText("Obrisi rutinu");
        jbtnDeleteRoutine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteRoutineActionPerformed(evt);
            }
        });

        jlblFile.setText(" Fajl:");
        jlblFile.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtnLoad.setText("Ucitaj fajl");
        jbtnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnLoadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlRoutinesLayout = new javax.swing.GroupLayout(jpnlRoutines);
        jpnlRoutines.setLayout(jpnlRoutinesLayout);
        jpnlRoutinesLayout.setHorizontalGroup(
            jpnlRoutinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlRoutinesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlRoutinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jlblFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlRoutinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnAddRoutine, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnEditRoutine, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(jbtnDeleteRoutine, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnLoad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpnlRoutinesLayout.setVerticalGroup(
            jpnlRoutinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlRoutinesLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpnlRoutinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFile, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jbtnLoad))
                .addGap(18, 18, 18)
                .addGroup(jpnlRoutinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlRoutinesLayout.createSequentialGroup()
                        .addComponent(jbtnAddRoutine)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnEditRoutine)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnDeleteRoutine))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        jpnlSteps.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Koraci rutine")));

        jtblRoutineSteps.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtblRoutineSteps);

        jbtnAddStep.setText("Dodaj korak");
        jbtnAddStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAddStepActionPerformed(evt);
            }
        });

        jbtnEditStep.setText("Izmeni korak");
        jbtnEditStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditStepActionPerformed(evt);
            }
        });

        jbtnDeleteStep.setText("Obrisi korak");
        jbtnDeleteStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteStepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnlStepsLayout = new javax.swing.GroupLayout(jpnlSteps);
        jpnlSteps.setLayout(jpnlStepsLayout);
        jpnlStepsLayout.setHorizontalGroup(
            jpnlStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlStepsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnAddStep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtnEditStep, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(jbtnDeleteStep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpnlStepsLayout.setVerticalGroup(
            jpnlStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnlStepsLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jpnlStepsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlStepsLayout.createSequentialGroup()
                        .addComponent(jbtnAddStep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnEditStep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnDeleteStep))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jbtnSave.setText("Sacuvaj fajl");
        jbtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbtnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jpnlRoutines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jpnlSteps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpnlRoutines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpnlSteps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnSave, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnAddRoutineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddRoutineActionPerformed
        new RoutineDialog(null, this, true).setVisible(true);
        rtm.setRoutines(RoutinesManager.getInstance().getRoutines());
        resetSteps();
    }//GEN-LAST:event_jbtnAddRoutineActionPerformed

    private void jbtnEditRoutineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditRoutineActionPerformed
        int row = jtblRoutines.getSelectedRow();
        if(row == -1) {
            JOptionPane.showMessageDialog(this, "Niste selektovali rutinu.");
        } else {
            Routine r = RoutinesManager.getInstance().getRoutines().get(row);
            new RoutineDialog(r, this, true).setVisible(true);
            rtm.setRoutines(RoutinesManager.getInstance().getRoutines());
            resetSteps();
        }
    }//GEN-LAST:event_jbtnEditRoutineActionPerformed

    private void jbtnDeleteRoutineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteRoutineActionPerformed
        int row = jtblRoutines.getSelectedRow();
        if(row == -1) {
            JOptionPane.showMessageDialog(this, "Niste selektovali rutinu.");
        } else {
            
            int response = JOptionPane.showConfirmDialog(this, "Jeste li sigurni da zelite izbrisati izabranu rutinu?", "Potvrdite izbor", JOptionPane.OK_CANCEL_OPTION);
            if(response == JOptionPane.OK_OPTION) {
                Routine r = RoutinesManager.getInstance().getRoutines().get(row);
                boolean res = RoutinesManager.getInstance().removeRoutine(r);
                
                if(res) {
                    rtm.setRoutines(RoutinesManager.getInstance().getRoutines());
                } else {
                    JOptionPane.showMessageDialog(this, "Ne mozete obrisati rutinu.");
                }
            }
            resetSteps();
        }
    }//GEN-LAST:event_jbtnDeleteRoutineActionPerformed

    private void jbtnAddStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAddStepActionPerformed
        int row = jtblRoutines.getSelectedRow();
        if(row == -1) {
            JOptionPane.showMessageDialog(this, "Niste selektovali rutinu.");
        } else {
            Routine r = RoutinesManager.getInstance().getRoutines().get(row);
            new RoutineStepDialog(r, null, this, true).setVisible(true);
            rstm.setSteps(r.getSteps());
        }
    }//GEN-LAST:event_jbtnAddStepActionPerformed

    private void jbtnEditStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditStepActionPerformed
        int row = jtblRoutines.getSelectedRow();
        if(row == -1) {
            JOptionPane.showMessageDialog(this, "Niste selektovali rutinu.");
        } else {
            int stepRow = jtblRoutineSteps.getSelectedRow();
            if(stepRow == -1) {
                JOptionPane.showMessageDialog(this, "Niste selektovali korak.");
            } else {
                Routine r = RoutinesManager.getInstance().getRoutines().get(row);
                RoutineStep rs = r.getSteps().get(stepRow);
                new RoutineStepDialog(r, rs, this, true).setVisible(true);
                rstm.setSteps(r.getSteps());
            }
        }
    }//GEN-LAST:event_jbtnEditStepActionPerformed

    private void jbtnDeleteStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteStepActionPerformed
        int row = jtblRoutines.getSelectedRow();
        if(row == -1) {
            JOptionPane.showMessageDialog(this, "Niste selektovali rutinu.");
        } else {
            int stepRow = jtblRoutineSteps.getSelectedRow();
            if(stepRow == -1) {
                JOptionPane.showMessageDialog(this, "Niste selektovali korak.");
            } else {
                int response = JOptionPane.showConfirmDialog(this, "Jeste li sigurni da zelite izbrisati izabrani korak?", "Potvrdite izbor", JOptionPane.OK_CANCEL_OPTION);
                if(response == JOptionPane.OK_OPTION) {
                    Routine r = RoutinesManager.getInstance().getRoutines().get(row);
                    RoutineStep rs = r.getSteps().get(stepRow);
                    boolean res = r.removeStep(rs);
                
                    if(res) {
                        rstm.setSteps(r.getSteps());
                    } else {
                        JOptionPane.showMessageDialog(this, "Ne mozete obrisati korak.");
                    }
                }
            }
        }
    }//GEN-LAST:event_jbtnDeleteStepActionPerformed

    private void jbtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSaveActionPerformed
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".json", "json", "json");
        fc.setFileFilter(filter);
        int retVal = fc.showSaveDialog(this);
        if(retVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String text = RoutinesManager.getInstance().generateJSON();
            if(text == null) {
                text = "";
            }
            saveToFile(text, file);
        } else {
//            JOptionPane.showMessageDialog(this, "Greska u cuvanju fajla.", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnSaveActionPerformed

    private void jbtnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnLoadActionPerformed
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".json", "json", "json");
        fc.setFileFilter(filter);
        int retVal = fc.showOpenDialog(this);
        if(retVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String json = loadFromFile(file);
            RoutinesManager.getInstance().loadRoutines(json);
        }
        rtm.setRoutines(RoutinesManager.getInstance().getRoutines());
    }//GEN-LAST:event_jbtnLoadActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnAddRoutine;
    private javax.swing.JButton jbtnAddStep;
    private javax.swing.JButton jbtnDeleteRoutine;
    private javax.swing.JButton jbtnDeleteStep;
    private javax.swing.JButton jbtnEditRoutine;
    private javax.swing.JButton jbtnEditStep;
    private javax.swing.JButton jbtnLoad;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JLabel jlblFile;
    private javax.swing.JPanel jpnlRoutines;
    private javax.swing.JPanel jpnlSteps;
    private javax.swing.JTable jtblRoutineSteps;
    private javax.swing.JTable jtblRoutines;
    // End of variables declaration//GEN-END:variables

    private void setupTables() {
        rtm = new RoutinesTableModel(new ArrayList<Routine>());
        jtblRoutines.setModel(rtm);
        
        rstm = new RoutineStepsTableModel(new ArrayList<RoutineStep>());
        jtblRoutineSteps.setModel(rstm);
        
        jtblRoutines.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(!e.getValueIsAdjusting()) {
                    setSteps();
                }
            }
        });
    }
    
    private void setSteps() {
        int row = jtblRoutines.getSelectedRow();
        if(row > -1) {
            Routine r = RoutinesManager.getInstance().getRoutines().get(row);
            rstm.setSteps(r.getSteps());
            jpnlSteps.setBorder(new TitledBorder("Koraci rutine ID: "+r.getId()));
        }
    }
    
    private void resetSteps() {
        rstm.setSteps(new ArrayList<RoutineStep>());
        jpnlSteps.setBorder(new TitledBorder("Koraci rutine"));
    }
    
    private RoutineStepsTableModel rstm;
    
    private RoutinesTableModel rtm;

    private void saveToFile(String text, File file) {
        BufferedWriter bw = null;
        try {
            String path = file.getCanonicalPath();
            if(!path.endsWith(".json")) {
                path += ".json";
            }
            bw = new BufferedWriter(new FileWriter(path));
            bw.write(text);
            setFile(path);
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Fajl nije pronadjen!", "Greska", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "I/O greska!", "Greska", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                 if(bw != null)
                    bw.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
    
    private String loadFromFile(File file) {
        BufferedReader br = null;
        String json = "";
        try {
            String path = file.getCanonicalPath();
            br = new BufferedReader(new FileReader(path));
            String line = null;
            while((line = br.readLine()) != null) {
                json += line;
            }
            setFile(path);
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Fajl nije pronadjen!", "Greska", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "I/O greska!", "Greska", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if(br != null)
                    br.close();
                return json;
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        return json;
    }
    
    private void setFile(String path) {
        jlblFile.setText("Fajl: "+path);
    }
}
